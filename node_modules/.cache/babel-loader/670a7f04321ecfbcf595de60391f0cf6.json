{"ast":null,"code":"import _classCallCheck from \"/Users/andrewcswartz/Google Drive/Coding/repos/ClickyGame/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/andrewcswartz/Google Drive/Coding/repos/ClickyGame/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/andrewcswartz/Google Drive/Coding/repos/ClickyGame/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/andrewcswartz/Google Drive/Coding/repos/ClickyGame/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/andrewcswartz/Google Drive/Coding/repos/ClickyGame/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/andrewcswartz/Google Drive/Coding/repos/ClickyGame/src/App.js\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport Header from \"./components/Header\";\nimport Board from \"./components/Board\";\nimport images from './image';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      \"message\": \"Click an image to start\",\n      \"score\": 0,\n      \"images\": images,\n      \"clicked\": []\n    };\n\n    _this.handleImageClickById = function (imageId) {\n      var clicked = _this.state.clicked.slice(0);\n\n      console.log(\"Checking\", clicked, imageId); // is this imageId in clicked\n\n      if (clicked.findIndex(function (item) {\n        return imageId === item;\n      }) === -1) {\n        clicked.push(imageId);\n\n        _this.setState({\n          \"clicked\": clicked,\n          \"score\": _this.state.score + 1,\n          \"message\": \"Good guess, keep going\"\n        });\n      } else {\n        // you lose, start over\n        _this.setState({\n          \"message\": \"You Lose, start over\",\n          \"score\": 0,\n          \"clicked\": []\n        });\n      } // rearrange images\n\n\n      var images = _this.state.images.slice(0);\n\n      images.sort(function () {\n        return Math.random() - 0.5;\n      });\n\n      _this.setState({\n        images: images\n      });\n\n      console.log(\"handling click for \", imageId);\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(Header, {\n        message: this.state.message,\n        score: this.state.score,\n        total: this.state.images.length,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }), React.createElement(Board, {\n        images: this.state.images,\n        clickHandler: this.handleImageClickById,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/andrewcswartz/Google Drive/Coding/repos/ClickyGame/src/App.js"],"names":["React","Component","Header","Board","images","App","state","handleImageClickById","imageId","clicked","slice","console","log","findIndex","item","push","setState","score","sort","Math","random","message","length"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,MAAP,MAAmB,SAAnB;;IAEMC,G;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACN,iBAAW,yBADL;AAEN,eAAS,CAFH;AAGN,gBAAUF,MAHJ;AAIN,iBAAW;AAJL,K;;UAORG,oB,GAAuB,UAACC,OAAD,EAAa;AAClC,UAAIC,OAAO,GAAG,MAAKH,KAAL,CAAWG,OAAX,CAAmBC,KAAnB,CAAyB,CAAzB,CAAd;;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBH,OAAxB,EAAiCD,OAAjC,EAFkC,CAGlC;;AACA,UAAIC,OAAO,CAACI,SAAR,CAAkB,UAAAC,IAAI;AAAA,eAAIN,OAAO,KAAKM,IAAhB;AAAA,OAAtB,MAAgD,CAAC,CAArD,EAAuD;AACrDL,QAAAA,OAAO,CAACM,IAAR,CAAaP,OAAb;;AACA,cAAKQ,QAAL,CAAc;AACZ,qBAAWP,OADC;AAEZ,mBAAS,MAAKH,KAAL,CAAWW,KAAX,GAAmB,CAFhB;AAGZ,qBAAW;AAHC,SAAd;AAKD,OAPD,MAOO;AACL;AACA,cAAKD,QAAL,CAAc;AACZ,qBAAW,sBADC;AAEZ,mBAAS,CAFG;AAGZ,qBAAW;AAHC,SAAd;AAKD,OAlBiC,CAmBlC;;;AACA,UAAIZ,MAAM,GAAG,MAAKE,KAAL,CAAWF,MAAX,CAAkBM,KAAlB,CAAwB,CAAxB,CAAb;;AACAN,MAAAA,MAAM,CAACc,IAAP,CAAY;AAAA,eAAMC,IAAI,CAACC,MAAL,KAAgB,GAAtB;AAAA,OAAZ;;AACA,YAAKJ,QAAL,CAAc;AAACZ,QAAAA,MAAM,EAANA;AAAD,OAAd;;AACAO,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAkCJ,OAAlC;AAED,K;;;;;;;6BAEQ;AACP,aACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AACA,QAAA,OAAO,EAAE,KAAKF,KAAL,CAAWe,OADpB;AAEA,QAAA,KAAK,EAAE,KAAKf,KAAL,CAAWW,KAFlB;AAGA,QAAA,KAAK,EAAE,KAAKX,KAAL,CAAWF,MAAX,CAAkBkB,MAHzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAKE,oBAAC,KAAD;AACE,QAAA,MAAM,EAAE,KAAKhB,KAAL,CAAWF,MADrB;AAEE,QAAA,YAAY,EAAE,KAAKG,oBAFrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALF,CADF;AAYD;;;;EAhDeN,S;;AAmDlB,eAAeI,GAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport Header from \"./components/Header\";\r\nimport Board from \"./components/Board\"\r\nimport images from './image'\r\n\r\nclass App extends Component {\r\n  state = {\r\n    \"message\": \"Click an image to start\",\r\n    \"score\": 0,\r\n    \"images\": images,\r\n    \"clicked\": []\r\n  };\r\n\r\n  handleImageClickById = (imageId) => {\r\n    let clicked = this.state.clicked.slice(0);\r\n    console.log(\"Checking\", clicked, imageId);\r\n    // is this imageId in clicked\r\n    if (clicked.findIndex(item => imageId === item) === -1){\r\n      clicked.push(imageId);\r\n      this.setState({\r\n        \"clicked\": clicked,\r\n        \"score\": this.state.score + 1,\r\n        \"message\": \"Good guess, keep going\"\r\n      })\r\n    } else {\r\n      // you lose, start over\r\n      this.setState({\r\n        \"message\": \"You Lose, start over\",\r\n        \"score\": 0,\r\n        \"clicked\": []\r\n      })\r\n    }\r\n    // rearrange images\r\n    let images = this.state.images.slice(0);\r\n    images.sort(() => Math.random() - 0.5);\r\n    this.setState({images});\r\n    console.log(\"handling click for \",imageId);\r\n    \r\n  } \r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Header \r\n        message={this.state.message}\r\n        score={this.state.score}\r\n        total={this.state.images.length} />\r\n        <Board \r\n          images={this.state.images}\r\n          clickHandler={this.handleImageClickById}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}